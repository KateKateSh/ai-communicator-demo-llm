import requests
import streamlit as st

TG_TOKEN = st.secrets["TG_TOKEN"]
TOGETHER_API_KEY = st.secrets["together"]["api_key"]
SUBSCRIBERS_FILE = "subscribers.txt"

def send_to_all_subscribers(text):
    try:
        with open(SUBSCRIBERS_FILE, "r") as f:
            chat_ids = [line.strip() for line in f if line.strip()]
    except FileNotFoundError:
        chat_ids = []

    for chat_id in chat_ids:
        try:
            payload = {
                "chat_id": chat_id,
                "text": text,
                "parse_mode": "Markdown"
            }
            url = f"https://api.telegram.org/bot{TG_TOKEN}/sendMessage"
            requests.post(url, json=payload, timeout=10)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ {chat_id}: {e}")

def query_together_ai(event, model="deepseek-ai/deepseek-llm-7b-chat"):
    prompt = f"""
–¢—ã ‚Äî AI-–∫–æ–º–º—É–Ω–∏–∫–∞—Ç–æ—Ä —Å–ø—Ä–æ—Å–∞ –¥–ª—è –ª–æ–≥–∏—Å—Ç–∏–∫–∏ –∏ e-commerce. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–æ–±—ã—Ç–∏–µ –∏ —á—ë—Ç–∫–æ –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏—è.

‚ö†Ô∏è –í–ê–ñ–ù–û: –Ω–µ –≤—ã—Ö–æ–¥–∏ –∑–∞ —Ñ–æ—Ä–º–∞—Ç. –ù–µ –ø–æ–≤—Ç–æ—Ä—è–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏. –¢–æ–ª—å–∫–æ –¥–µ–ª–æ–≤–æ–π, –∫—Ä–∞—Ç–∫–∏–π –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç.

üìå –§–æ—Ä–º–∞—Ç:
üìå –ü—Ä–æ–≥–Ω–æ–∑: ...
‚úÖ –î–µ–π—Å—Ç–≤–∏—è:
- ...
- ...
üë• –†–æ–ª–∏:
- ...
üß† –ü–æ—á–µ–º—É:
...

–°–æ–±—ã—Ç–∏–µ: {event}
–û—Ç–≤–µ—Ç:
"""

    headers = {
        "Authorization": f"Bearer {TOGETHER_API_KEY}",
        "Content-Type": "application/json"
    }
    url = "https://api.together.xyz/inference"

    payload = {
        "model": model,
        "max_tokens": 512,
        "temperature": 0.7,
        "top_p": 0.9,
        "repetition_penalty": 1.1,
        "prompt": prompt
    }

    try:
        response = requests.post(url, headers=headers, json=payload, timeout=60)
        response.raise_for_status()
        result = response.json()
        generated_text = result.get("output", "").strip()
        if generated_text:
            final_output = clean_response(generated_text)
            send_to_all_subscribers(final_output)
            return final_output
        return "[‚ö†Ô∏è –û—Ç–≤–µ—Ç –Ω–µ –ø–æ–ª—É—á–µ–Ω]"
    except Exception as e:
        return f"[‚ùå –û—à–∏–±–∫–∞ LLM: {str(e)}]"

def clean_response(raw_text):
    start = raw_text.find("üìå –ü—Ä–æ–≥–Ω–æ–∑:")
    return raw_text[start:].strip() if start != -1 else raw_text.strip()
