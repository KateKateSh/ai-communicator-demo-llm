import requests
import streamlit as st

def query_llm(event, provider="together", model="meta-llama/Llama-3-8b-chat-hf"):
    prompt = f"""
–¢—ã ‚Äî AI-–∫–æ–º–º—É–Ω–∏–∫–∞—Ç–æ—Ä —Å–ø—Ä–æ—Å–∞ –¥–ª—è –ª–æ–≥–∏—Å—Ç–∏–∫–∏ –∏ e-commerce. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–æ–±—ã—Ç–∏–µ –∏ —á—ë—Ç–∫–æ –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏—è.

‚ö†Ô∏è –í–ê–ñ–ù–û: –Ω–µ –≤—ã—Ö–æ–¥–∏ –∑–∞ —Ñ–æ—Ä–º–∞—Ç. –ù–µ –ø–æ–≤—Ç–æ—Ä—è–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏. –ù–µ –ø–∏—à–∏ –ø—Ä–∏–º–µ—Ä—ã. –¢–æ–ª—å–∫–æ –¥–µ–ª–æ–≤–æ–π, –∫—Ä–∞—Ç–∫–∏–π –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç.

üìå –§–æ—Ä–º–∞—Ç:
üìå –ü—Ä–æ–≥–Ω–æ–∑: ...
‚úÖ –î–µ–π—Å—Ç–≤–∏—è:
- ...
- ...
üë• –†–æ–ª–∏:
- ...
üß† –ü–æ—á–µ–º—É:
...

–°–æ–±—ã—Ç–∏–µ: {event}
–û—Ç–≤–µ—Ç:
"""

    headers = {
        "Content-Type": "application/json"
    }

    if provider == "together":
        api_key = st.secrets["together"]["api_key"]
        headers["Authorization"] = f"Bearer {api_key}"
        url = "https://api.together.xyz/v1/chat/completions"
    elif provider == "deepseek":
        api_key = st.secrets["deepseek"]["api_key"]
        headers["Authorization"] = f"Bearer {api_key}"
        url = "https://api.deepseek.com/v1/chat/completions"
    else:
        return "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ø—Ä–æ–≤–∞–π–¥–µ—Ä LLM."

    payload = {
        "model": model,
        "messages": [
            {"role": "user", "content": prompt}
        ],
        "temperature": 0.6,
        "top_p": 0.85,
        "stream": False
    }

    try:
        response = requests.post(url, headers=headers, json=payload, timeout=30)
        response.raise_for_status()
        result = response.json()
        if "choices" in result and len(result["choices"]) > 0:
            return result["choices"][0]["message"]["content"]
        else:
            return "‚ö†Ô∏è –û—Ç–≤–µ—Ç –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç–∞."
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞ LLM: {str(e)}"
