import requests
import streamlit as st

HF_TOKEN = st.secrets["HF_TOKEN"]

def query_huggingface(event, model="HuggingFaceH4/zephyr-7b-beta"):
    prompt = f"""
–¢—ã ‚Äî AI-–∫–æ–º–º—É–Ω–∏–∫–∞—Ç–æ—Ä —Å–ø—Ä–æ—Å–∞ –¥–ª—è –ª–æ–≥–∏—Å—Ç–∏–∫–∏ –∏ e-commerce. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤–Ω–µ—à–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è (–ø–æ–≥–æ–¥–∞, –∞–∫—Ü–∏–∏, –ø—Ä–∞–∑–¥–Ω–∏–∫–∏, –∫–æ–Ω—Ü–µ—Ä—Ç—ã) –∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∫—Ä–∞—Ç–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏, –∫–∞–∫ —Å–µ—Ä–≤–∏—Å—É –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ –∏–∑–º–µ–Ω–µ–Ω–∏—é —Å–ø—Ä–æ—Å–∞.

–§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞:
üìå –ü—Ä–æ–≥–Ω–æ–∑: ...
‚úÖ –î–µ–π—Å—Ç–≤–∏—è:
- ...
- ...
- ...
üë• –†–æ–ª–∏:
- ...
üß† –ü–æ—á–µ–º—É:
...

–ü—Ä–∏–º–µ—Ä:

–°–æ–±—ã—Ç–∏–µ: "14 —Ñ–µ–≤—Ä–∞–ª—è, –î–µ–Ω—å –≤—Å–µ—Ö –≤–ª—é–±–ª—ë–Ω–Ω—ã—Ö, —Å–Ω–µ–≥ –≤ –ú–æ—Å–∫–≤–µ"

üìå –ü—Ä–æ–≥–Ω–æ–∑: –æ–∂–∏–¥–∞–µ—Ç—Å—è —Ä–æ—Å—Ç —Å–ø—Ä–æ—Å–∞ –Ω–∞ —Ü–≤–µ—Ç—ã, –ø–æ–¥–∞—Ä–∫–∏, –¥–æ—Å—Ç–∞–≤–∫—É –µ–¥—ã. –ò–∑-–∑–∞ —Å–Ω–µ–≥–æ–ø–∞–¥–∞ –≤–æ–∑–º–æ–∂–Ω—ã –∑–∞–¥–µ—Ä–∂–∫–∏ –∫—É—Ä—å–µ—Ä–æ–≤.

‚úÖ –î–µ–π—Å—Ç–≤–∏—è:
- –£–≤–µ–ª–∏—á–∏—Ç—å –∑–∞–ø–∞—Å—ã –ø–æ–¥–∞—Ä–∫–æ–≤ –∏ –≤–∏–Ω–∞ –≤ —Ü–µ–Ω—Ç—Ä–µ –ú–æ—Å–∫–≤—ã
- –£–≤–µ–ª–∏—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—É—Ä—å–µ—Ä–æ–≤ —Å 16:00 –¥–æ 22:00
- –ù–∞—Å—Ç—Ä–æ–∏—Ç—å push —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º ‚Äú–≤–µ—á–µ—Ä–Ω–∏–π –ø–æ–¥–∞—Ä–æ–∫‚Äù
- –°–æ–∑–¥–∞—Ç—å –≤–∏—Ç—Ä–∏–Ω—É ‚Äú—Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –Ω–∞–±–æ—Ä‚Äù

üë• –†–æ–ª–∏:
- –õ–æ–≥–∏—Å—Ç–∏–∫–∞
- –°–∫–ª–∞–¥
- –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥

üß† –ü–æ—á–µ–º—É:
–°–Ω–µ–≥ + –ø—Ä–∞–∑–¥–Ω–∏–∫ —Å–æ–∑–¥–∞—é—Ç –ø–∏–∫–æ–≤—ã–π —Å–ø—Ä–æ—Å –∏ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å–±–æ–∏ –≤ –¥–æ—Å—Ç–∞–≤–∫–µ. –ù—É–∂–Ω–æ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∑–∞—Ä–∞–Ω–µ–µ.

---

–¢–µ–ø–µ—Ä—å –æ–±—Ä–∞–±–æ—Ç–∞–π —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ:

–°–æ–±—ã—Ç–∏–µ: {event}
"""

    url = f"https://api-inference.huggingface.co/models/{model}"
    headers = {"Authorization": f"Bearer {HF_TOKEN}"}
    payload = {
        "inputs": prompt,
        "parameters": {
            "max_new_tokens": 300,
            "temperature": 0.7,
            "top_p": 0.9
        }
    }

    try:
        response = requests.post(url, headers=headers, json=payload, timeout=30)
        response.raise_for_status()
        result = response.json()
        if isinstance(result, list) and "generated_text" in result[0]:
            return result[0]["generated_text"]
        return "[‚ö†Ô∏è –û—Ç–≤–µ—Ç –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç–∞]"
    except Exception as e:
        return f"[‚ùå –û—à–∏–±–∫–∞ LLM: {str(e)}]"
